mutate(month = month(month, label = TRUE)) %>%
arrange(desc(count)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
moco_2023 %>%
group_by(month)
moco_2023 %>%
group_by(month) %>%
summarize(count = n())
moco_monthly <- moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
ggplot(aes(x = month, y = `year`, color = factor(year))) +
geom_line() +
labs(
title = "Monthly Car Thefts Over the Years",
x = "Month",
y = "Count",
color = "Year")
moco_monthly <- moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
oco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
gplot(aes(x = month, y = `YEAR_1`, color = factor(year)) +
gplot(aes(x = month, y = `YEAR_1`, color = factor(year)) +
geom_line() +
labs(
title = "Car Thefts Over the Months",
x = "Month",
y = "Count",
color = "Year"
)
ggplot(aes(x = month, y = `YEAR_1`, color = factor(year)) +
geom_line() +
labs(
title = "Car Thefts Over the Months",
x = "Month",
y = "Count",
color = "Year"
)
ggplot(aes(x = month, y = year, color = factor(year))) +
geom_line() +
labs(
title = "Car Thefts Over the Months",
x = "Month",
y = "Count",
color = "Year"
)
View(moco_monthly)
ggplot(aes(data = moco_monthly, x = month, y = year, color = factor(year))) +
geom_line() +
labs(
title = "Car Thefts Over the Months",
x = "Month",
y = "Count",
color = "Year"
)
ggplot(data = moco_monthly, aes(x = month, y = year, color = factor(year))) +
geom_line() +
labs(
title = "Car Thefts Over the Months",
x = "Month",
y = "Count",
color = "Year"
)
moco_car_thefts %>%
group_by(year) %>%
summarize(count = n()) %>%
mutate(perc = count/sum(count)*100)
View(moco_yearly)
write_csv(moco_2023, "data/moco_2023.csv")
write_csv(moco_car_thefts, "data/moco_car_thefts.csv")
reverse_geocoding_stolen_auto <- stolen_auto %>%
reverse_geocode(lat = latitude, long = longitude, method = 'osm',
address = street_address, full_results = TRUE)
View(moco_data)
rm(list="moco_data")
moco_data <-  read.csv("data/moco_data.csv")
View(moco_data)
# cleaning
moco_data <- moco_data %>%
separate(Dispatch.Date...Time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
select(-Incident.ID, -Offence.Code, -CR.Number, -Start_Date_Time, -End_Date_Time, -Crime.Name1, -Crime.Name3,) %>%
rename(crime_name = Crime.Name2) %>%
clean_names()
moco_data %>%
group_by(city) %>%
summarize(count = n())
moco_data <- moco_data %>%
mutate(city = case_when(
city == "SILVE SPRING" ~ "SILVER SPRING",
city == "BEHTESDA" ~ "BETHESDA",
city == "SILVERS SPRING" ~ "SILVER SPRING",
city == "GAIHTERSBURG" ~ "GAITHERSBUG",
city == "BETHEDA" ~ "BETHESDA",
city == "BARNSVILLE" ~ "BARNESVILLE",
city == "BEALSVILLE" ~ "BEALLSVILLE",
city == "CLAEKSBURG" ~ "CLARKSBURG",
city == "GAIHTERSBURG" ~ "GAITHERSBURG",
city == "GAITHERBURG" ~ "GAITHERSBURG",
city == "GAITHERSBUG" ~ "GAITHERSBURG",
city == "GAUTHERSBURG" ~ "GAITHERSBURG",
city == "GAITHERSBUG" ~ "GAITHERSBURG",
city == "GRMANTOWN" ~ "GERMANTOWN",
city == "KENSTINGTON" ~ "KENSINGTON",
city == "MT AIRY" ~ "MOUNT AIRY",
city == "TACOMA PARK" ~ "TAKOMA PARK",
city == "WEHATON" ~ "WHEATON",
TRUE ~ city
))
moco_data %>%
distinct(crime_name)
moco_2023 <- moco_data %>%
filter(year == "2023", crime_name == "Motor Vehicle Theft")
#exporting 2023
write_csv(moco_2023, "data/moco_2023.csv")
moco_car_thefts <- moco_data %>%
filter(crime_name == "Motor Vehicle Theft")
write_csv(moco_car_thefts, "data/moco_car_thefts.csv")
View(moco_car_thefts)
moco_yearly <- moco_car_thefts %>%
group_by(year) %>%
summarize(count = n()) %>%
mutate(perc = count/sum(count)*100)
ggplot() +
geom_bar(
data=moco_yearly,
aes(x=year, weight=`count`))
moco_theft_places <- moco_car_thefts %>%
group_by(place) %>%
summarize(count = n()) %>%
mutate(perc = count/sum(count)*100) %>%
arrange(desc(count))
moco_monthly <- moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
moco_car_thefts %>%
group_by(year) %>%
summarize(count = n()) %>%
mutate(perc = count/sum(count)*100)
library(tidyverse)
library(janitor)
library(lubridate)
#install.packages('tidygeocoder')
library(tidygeocoder)
install.packages("curl")
library(curl)
View(moco_yearly)
write_csv(moco_2023, "data/moco_2023.csv")
write_csv(moco_yearly, "data/moco_yearly.csv")
rm(list = "moco_data")
moco_data <-  read.csv("data/moco_data.csv")
# cleaning
moco_data
# cleaning
moco_data
moco_data <- moco_data %>%
separate(Start_Date_Time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
select(-Incident.ID, -Offence.Code, -CR.Number, -Start_Date_Time, -End_Date_Time, -Crime.Name1, -Crime.Name3,) %>%
rename(crime_name = Crime.Name2) %>%
clean_names()
# cleaning
moco_data
moco_data <- moco_data %>%
separate(Start_Date_Time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
select(-Incident.ID, -Offence.Code, -CR.Number, -Dispatch.Date...Time, -End_Date_Time, -Crime.Name1, -Crime.Name3,) %>%
rename(crime_name = Crime.Name2) %>%
clean_names()
moco_data %>%
group_by(city) %>%
summarize(count = n())
moco_data <- moco_data %>%
mutate(city = case_when(
city == "SILVE SPRING" ~ "SILVER SPRING",
city == "BEHTESDA" ~ "BETHESDA",
city == "SILVERS SPRING" ~ "SILVER SPRING",
city == "GAIHTERSBURG" ~ "GAITHERSBUG",
city == "BETHEDA" ~ "BETHESDA",
city == "BARNSVILLE" ~ "BARNESVILLE",
city == "BEALSVILLE" ~ "BEALLSVILLE",
city == "CLAEKSBURG" ~ "CLARKSBURG",
city == "GAIHTERSBURG" ~ "GAITHERSBURG",
city == "GAITHERBURG" ~ "GAITHERSBURG",
city == "GAITHERSBUG" ~ "GAITHERSBURG",
city == "GAUTHERSBURG" ~ "GAITHERSBURG",
city == "GAITHERSBUG" ~ "GAITHERSBURG",
city == "GRMANTOWN" ~ "GERMANTOWN",
city == "KENSTINGTON" ~ "KENSINGTON",
city == "MT AIRY" ~ "MOUNT AIRY",
city == "TACOMA PARK" ~ "TAKOMA PARK",
city == "WEHATON" ~ "WHEATON",
TRUE ~ city
))
moco_data %>%
distinct(crime_name)
moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
View(moco_yearly)
View(moco_monthly)
moco_car_thefts %>%
group_by(start_date) %>%
summarize(count = n())
moco_car_thefts %>%
distinct(start_date)
write_csv(moco_2023, "data/moco_2023.csv")
write_csv(moco_2023, "data/moco_2023.csv")
reverse_geocoding_stolen_auto <- stolen_auto %>%
reverse_geocode(lat = latitude, long = longitude, method = 'osm',
address = street_address, full_results = TRUE)
View(yearly_data)
View(perc_stolen)
adam_test <- read_csv"https://cnsmaryland.slack.com/files/U90B4BEJ1/F063PPY0SHW/crime_20231026.csv")
adam_test <- read_csv("data/test_data.csv")
adam_test <- adam_test %>%
separate(Start_Date_Time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
select(-Incident.ID, -Offence.Code, -CR.Number, -Dispatch.Date...Time, -End_Date_Time, -Crime.Name1, -Crime.Name3,) %>%
rename(crime_name = Crime.Name2) %>%
clean_names()
View(adam_test)
adam_test <- adam_test %>%
separate(Start_Date_Time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
select(-Incident ID, -Offence.Code, -CR.Number, -Dispatch.Date...Time, -End_Date_Time, -Crime.Name1, -Crime.Name3,) %>%
adam_test <- adam_test %>%
separate(Start_Date_Time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
select(-IncidentID, -Offence.Code, -CR.Number, -Dispatch.Date...Time, -End_Date_Time, -Crime.Name1, -Crime.Name3,) %>%
rename(crime_name = Crime.Name2) %>%
clean_names()
adam_test <- adam_test %>%
clean_names()
adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = Crime.Name2) %>%
adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = Crime.Name2) %>%
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = crime_name2) %>%
```
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = crime_name2) %>%
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = crime_name2)
View(adam_test)
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = crime_name2)
rm(list="adam_test")
adam_test <- read_csv("data/test_data.csv")
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
rename(crime_name = crime_name2)
rm(list="adam_test")
adam_test <- read_csv("data/test_data.csv")
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020 | crime_name == "Motor Vehicle Theft") %>%
rename(crime_name = crime_name2)
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020 | crime_name2 == "Motor Vehicle Theft") %>%
rename(crime_name = crime_name2)
View(adam_test)
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020, crime_name2 == "Motor Vehicle Theft") %>%
rename(crime_name = crime_name2)
rm(list="adam_test")
adam_test <- read_csv("data/test_data.csv")
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
filter(crime_name2 == "Motor Vehicle Theft") %>%
rename(crime_name = crime_name2)
moco_data <- read_csv("data/test_data.csv")
rm(list="adam_data")
rm(list="adam_test")
# cleaning
moco_data <- moco_data %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
filter(crime_name2 == "Motor Vehicle Theft") %>%
rename(crime_name = crime_name2)
moco_data %>%
group_by(city) %>%
summarize(count = n())
moco_data <- moco_data %>%
mutate(city = case_when(
city == "SILVE SPRING" ~ "SILVER SPRING",
city == "BEHTESDA" ~ "BETHESDA",
city == "SILVERS SPRING" ~ "SILVER SPRING",
city == "GAIHTERSBURG" ~ "GAITHERSBUG",
city == "BETHEDA" ~ "BETHESDA",
city == "BARNSVILLE" ~ "BARNESVILLE",
city == "BEALSVILLE" ~ "BEALLSVILLE",
city == "CLAEKSBURG" ~ "CLARKSBURG",
city == "GAIHTERSBURG" ~ "GAITHERSBURG",
city == "GAITHERBURG" ~ "GAITHERSBURG",
city == "GAITHERSBUG" ~ "GAITHERSBURG",
city == "GAUTHERSBURG" ~ "GAITHERSBURG",
city == "GAITHERSBUG" ~ "GAITHERSBURG",
city == "GRMANTOWN" ~ "GERMANTOWN",
city == "KENSTINGTON" ~ "KENSINGTON",
city == "MT AIRY" ~ "MOUNT AIRY",
city == "TACOMA PARK" ~ "TAKOMA PARK",
city == "WEHATON" ~ "WHEATON",
TRUE ~ city
))
moco_data %>%
distinct(crime_name)
adam_test <- adam_test %>%
clean_names() %>%
separate(start_date_time, c('start_date', 'start_time'), sep=' ', extra='merge') %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"),
year = year(start_date),
month = month(start_date)) %>%
filter(year >= 2020) %>%
filter(crime_name2 == "Motor Vehicle Theft") %>%
rename(crime_name = crime_name2)
moco_2023 <- moco_data %>%
filter(year == "2023", crime_name == "Motor Vehicle Theft")
#exporting 2023
write_csv(moco_2023, "data/moco_2023.csv")
moco_car_thefts <- moco_data %>%
filter(crime_name == "Motor Vehicle Theft")
write_csv(moco_car_thefts, "data/moco_car_thefts.csv")
View(moco_car_thefts)
moco_yearly <- moco_car_thefts %>%
group_by(year) %>%
summarize(count = n()) %>%
mutate(perc = count/sum(count)*100)
ggplot() +
geom_bar(
data=moco_yearly,
aes(x=year, weight=`count`))
write_csv(moco_yearly, "data/moco_yearly.csv")
moco_theft_places <- moco_car_thefts %>%
group_by(place) %>%
summarize(count = n()) %>%
mutate(perc = count/sum(count)*100) %>%
arrange(desc(count))
moco_monthly <- moco_car_thefts %>%
group_by(month, year) %>%
summarize(count = n()) %>%
mutate(month = month(month, label = TRUE)) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
stolen_auto %>%
group_by(year, crime_type) %>%
summarize(count = n()) %>%
mutate(perc = (count / sum(count)) * 100)
stolen_recovered_only %>%
group_by(year) %>%
summarize(count = n()) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
stolen_auto %>%
group_by(year, crime_type) %>%
summarize(count = n()) %>%
mutate(perc = (count / sum(count)) * 100) %>%
pivot_wider(names_from = year, values_from = count, values_fill = 0)
stolen_auto %>%
group_by(year, crime_type) %>%
summarize(count = n()) %>%
mutate(perc = (count / sum(count)) * 100) %>%
pivot_wider(names_from = year, values_from = count)
stolen_auto %>%
group_by(year, crime_type) %>%
summarize(count = n()) %>%
#mutate(perc = (count / sum(count)) * 100) %>%
pivot_wider(names_from = year, values_from = count)
View(moco_yearly)
View(moco_monthly)
stolen_auto %>%
slice(1:2936)
#breaking up stolen auto
#breaking it up into 4 subsets with 2,936 rows because 11,744/4 = 2,936
#Code was copied from ChatGPT
subset_size <- 2936
subset1 <- stolen_auto[1:subset_size, ]
subset2 <- stolen_auto[(subset_size + 1):(2 * subset_size), ]
subset3 <- stolen_auto[(2 * subset_size + 1):(3 * subset_size), ]
subset4 <- stolen_auto[(3 * subset_size + 1):(4 * subset_size), ]
View(reverse_geocoding_test)
rm(list="reverse_geocoding_stolen_auto")
rm(list="reverse_geocoding_stolen_test")
View(subset1)
subset1 <- subset1 %>%
reverse_geocode(lat = latitude, long = longitude, method = 'osm',
address = street_address, full_results = TRUE)
View(subset1)
rm(list=subset1)
rm(list="subset1")
# Number of rows you want in each subset
subset_size <- 1468
subset1
subset1 <- stolen_auto[1:subset_size,]
subset1 <- subset1 %>%
reverse_geocode(lat = latitude, long = longitude, method = 'osm',
address = street_address, full_results = TRUE)
View(subset1)
subset2 <- stolen_auto[(subset_size + 1):(2 * subset_size), ]
subset2 <- subset2 %>%
reverse_geocode(lat = latitude, long = longitude, method = 'osm',
address = street_address, full_results = TRUE)
View(subset2)
